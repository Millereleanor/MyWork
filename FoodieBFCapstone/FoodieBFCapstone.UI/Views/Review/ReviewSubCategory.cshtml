@using FoodieBFCapstone.Models
@model List<BlogPost>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "ReviewSubCategory";
}

<h2>Reviews</h2>
@*want this to dynamicly change to reflect what subcategory you are displaying
    <h3></h2>*@

<br />
@*@if (Model != null && Model.Any())
{*@
    @*@foreach (var blog in ViewBag.OnePageOfProducts)
     {
         foreach (var item in Model)
         {
             <a href="@Url.Action("Details", "Home", new
                      {
                          id = item.BlogId
                      })">
                 <div class="row">
                     <div class="col-md-3">
                         <div class="item">

                             <img class="item" src="@item.MainPictureUrl" alt=""/>

                         </div>
                     </div>
                     <div class="col-md-8">
                         <h4>@item.Title - <span style="font-weight: normal; font-size: medium">@item.CreatedOn.ToShortDateString()</span></h4>
                         <div class="blogContent">@item.Summary</div>
                         <p style="color: teal">Author: @item.Author.FirstName @item.Author.LastName</p>
                     </div>
                 </div>
             </a>
         }
     }*@

    @foreach (var post in ViewBag.OnePageOfProducts)
    {
        var p = (BlogPost)post;
        <a href="@Url.Action("Details", "Home", new {blogId = post.BlogId})">
            <div class="row">
                <div class="col-sm-2 item">
                    <img src="@post.MainPictureUrl" class="item" />
                </div>
                <div class="col-sm-8" style="margin: 10px;">
                    <p>
                        <h4>@post.Title</h4>
                    </p>
                    <p style="color:teal">Author: @post.Author.FirstName @post.Author.LastName</p>
                    <p>@post.Summary</p>
                    <p>
                        Posted on:
                        @if (p.ApprovedOn != null)
                        {
                            @p.ApprovedOn.Value.ToShortDateString()

                        }
                    </p>
                </div>
            </div>
        </a>
    }



<div class="text-center">
    @Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("ReviewSubCategory", new { page, subCategory = (string)ViewBag.subcategory }))

    
    
</div>