@using System.Web.Mvc.Html
@using FoodieBFCapstone.Models
@using Microsoft.AspNet.Identity
@model FoodieBFCapstone.UI.Models.CreatePostVM
@{
    ViewBag.Title = Model.NewBlog.BlogId != 0 ? "Update Blog" : "Create New Blog";
}
<style>
    .redText {
        color: #E53C37;
    }

    .error {
        border: 2px solid #E53C37;
    }
</style>

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("CreateNewBlog", "Contributor", FormMethod.Post, new { id = "newBlogPost" }))
{
    <div class="row">
        <div class="form-group col-md-3">
            <label>Subcategory:</label> @Html.DropDownListFor(m => m.NewBlog.Subcategory.SubcategoryId, Model.Subcats, new { @class = "form-control" })
        </div>
        <div class="form-group col-md-9" name="title">
            @Html.LabelFor(m => m.NewBlog.Title, "Title (max 100 characters):", new {@class = "control-label"})
            @Html.EditorFor(m => m.NewBlog.Title, new { HtmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.NewBlog.Title, null, new { @class = "redText" })
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.NewBlog.Summary, "Summary (max 255 characters):", new { @class = "control-label" })
            @Html.EditorFor(m => m.NewBlog.Summary, new { HtmlAttributes = new { @class = "form-control form-inline" } })
            @Html.ValidationMessageFor(m => m.NewBlog.Summary, null, new { @class = "redText" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.NewBlog.MainPictureUrl, "Main Picture URL (max 125 characters):", new { @class = "control-label" })
            @Html.EditorFor(m => m.NewBlog.MainPictureUrl, new { HtmlAttributes = new { @class = "form-control form-inline" } })
            @Html.ValidationMessageFor(m => m.NewBlog.MainPictureUrl, null, new { @class = "redText" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(m => m.NewBlog.PostContent, "Content:", new { @class = "control-label", id = "tinyLabel" })
            @Html.TextAreaFor(m => m.NewBlog.PostContent, new { @id = "Textarea", name = "tinyPost" })
            @Html.ValidationMessageFor(m => m.NewBlog.PostContent, null, new { @class = "redText" })
            <span class="redText" id="tinyError"></span>
        </div>
    </div>
    <div class="form-group col-md-12">
        @Html.LabelFor(m => m.TagString, "Tags (separate by comma ',' or enter key):", new { @class = "control-label" })
        @Html.HiddenFor(m => m.TagString, new { @name = "tags", @id = "mySingleField" })
        <ul id="singleFieldTags"></ul>
    </div>

    <div class="row">
        <div class="form-group col-md-12">
            @Html.HiddenFor(m => m.NewBlog.BlogId)
            @Html.HiddenFor(m => m.NewBlog.UserId)
            @Html.HiddenFor(m => m.NewBlog.CreatedOn)
            @Html.HiddenFor(m => m.NewBlog.PublishDate)
            @Html.HiddenFor(m => m.NewBlog.ExpirationDate)
            @Html.HiddenFor(m => m.NewBlog.ApprovedOn)
        </div>
    </div>

    <a class="btn btn-danger" href="@Url.Action("Index", "Contributor")" type="reset">Cancel</a>

    <button href="#" class="btn btn-success" id="SubYo" type="button">Submit</button>
    @Html.Partial("_PendingReview")
}
@section firstScripts{
    <script src='//cdn.tinymce.com/4/tinymce.min.js'></script>
    <script src="~/Scripts/App/modernTinyMCE.js"></script>
}

@section scripts{
    <link href="~/Content/jquery.tagit.css" rel="stylesheet" type="text/css">
    <link href="~/Content/tagit.ui-zendesk.css" rel="stylesheet" type="text/css">
    <script src="~/Scripts/tag-it.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/App/tag-input/tag-input-app.js"></script>

    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/App/jquery-validate-default.js"></script>
    <script type="text/javascript" src="~/Scripts/App/Create-Post-Validate.js"></script>
}